{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAERC,mBAAS,IAFD,mBAEpCC,EAFoC,KAEzBC,EAFyB,KAiB3C,OACI,mCACI,uBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAS,IACrBP,GACI,SAAAQ,GAAU,OAAIN,GAAJ,mBAAkBM,OAEhCL,EAAc,MAMd,UACI,uBACIM,KAAM,OACNC,MAASR,EACTS,SApBU,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,UAqBf,oD,+BC3BCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAeZM,GAfY,4CAAH,sDCaTO,EAZK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG3B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC2BDO,EA/BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAa,IAAD,EAEZb,mBAAS,CAC9BoB,KAAK,GACLa,SAAQ,IAJyB,mBAE9BC,EAF8B,KAExBC,EAFwB,KAmBrC,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IAIIqB,EDZuBK,CAAa1B,GAA/Ba,EAJgB,EAIrBN,KAAYa,EAJS,EAITA,QAKnB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GACR,OACA,cAAC,EAAD,eAEYA,GADCA,EAAIC,aEU9BgB,EA9BM,WAAO,IAAD,EAEYxC,mBAAS,CAAC,KAFtB,mBAEhBO,EAFgB,KAELR,EAFK,KAIvB,OACI,qCACA,8CACA,uBACA,cAAC,EAAD,CACIA,cAAeA,IAGnB,6BAEQQ,EAAWe,KAAI,SAAAT,GACX,OACI,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MCf7B4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.da291ac9.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react/cjs/react.development';\n//import PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) =>{\n\n    const [inputValue,setInputValue] = useState('')\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        if ( inputValue.length > 0){\n            setCategories(\n                categories =>[inputValue,...categories,]\n            )\n            setInputValue('')\n        }\n\n    }\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type =\"text\"\n                    value = {inputValue}\n                    onChange= {handleInputChange}\n                />\n                <h2>Add Category</h2>\n            </form>\n\n        </>\n    )\n\n}\n/*\nAddCategory.propTypes = {\n    setCategories: PropTypes.isRequired\n}\n*/\nexport default AddCategory","\n\n    export const getGifs = async (category) => {\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=eVI1emM6KtGWciOomzB8KPEVytQvl7dZ&q=${encodeURI(category)}&limit=10`\n        const resp = await fetch(url)\n        const {data} = await resp.json()\n\n        const gifs = data.map(img => { //convierto la data en otro arreglo mas sencillo de leer\n            return{\n                id:img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n\n        })\n\n        \n        return gifs\n    }","import React from 'react';\n\n\nconst GifGridItem = ({id,title,url}) => {\n\n\n    return(\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title}  />\n            <p>{title}</p>\n        </div>\n    )\n\n}\n\nexport default GifGridItem","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n//import { useState,useEffect } from 'react/cjs/react.development';\n//import { getGifs } from '../helpers/getGifs';\nimport GifGridItem from './GifGridItem';\nconst GifGrid = ({category}) => {\n\n    //const [images,setImages] = useState([])\n\n    const {data:images,loading} = useFetchGifs(category)\n\n\n\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n\n                    {\n                        images.map( img =>{\n                            return(\n                            <GifGridItem\n                                    key={img.id}  \n                                    {...img}\n                            />\n                            )\n                        })\n                    }\n            </div>\n\n        </>\n    )\n}\n\nexport default GifGrid","import { useState,useEffect } from \"react/cjs/react.development\"\nimport { getGifs } from '../helpers/getGifs';\nexport const useFetchGifs = (category) =>{\n\n    const [state,setState] = useState({\n        data:[],\n        loading:true\n    })\n\n    useEffect(() =>{\n        getGifs(category)\n            .then(imgs =>{\n                setState({\n                    data:imgs,\n                    loading:false\n                })\n            })\n    },[category]) \n\n\n\n    return state\n    \n}","import React,{useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories,setCategories] = useState([''])\n\n    return(\n        <>\n        <h2>GifExpertApp</h2>\n        <hr />\n        <AddCategory\n            setCategories={setCategories}\n        />\n\n        <ol>\n            {\n                categories.map(category => {\n                    return(\n                        <GifGrid\n                        key={category}\n                        category = {category}\n                    />\n                    )\n\n                })\n            }\n        </ol>\n\n        </>\n\n    )\n}\nexport default GifExpertApp  ","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n)"],"sourceRoot":""}